@model WBPOS.ViewModel.VMCountry;
@{
    ViewData["Title"] = "Create";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Country - Edit</h1>
            </div>
        </div>
    </div>
</div>


<div class="card"> 
    <div class="card-body"> 
         <div class="box-body">
            <div class="form-group col-md-12">
                <div class="col-md-8">
                    @using (Html.BeginForm())
                    { 
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.countryId) 
                        @Html.HiddenFor(model => model.createdDate)
                        @*@Html.HiddenFor(model => model.status)*@
                        @Html.HiddenFor(model => model.createdBy)
                        <div class="form-horizontal">
                            @Html.ValidationMessage("Error", htmlAttributes: new { @class = "errorsummary", id = "errorsummary" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.countryName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.countryName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.countryName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.countryCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.countryCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.countryCode, "", new { @class = "text-danger" })
                                </div>
                            </div>     
                            <div class="form-group">
                                @Html.LabelFor(model => model.countryPhoneCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.countryPhoneCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.countryPhoneCode, "", new { @class = "text-danger" })
                                </div>
                            </div>   
                            <div class="form-group">
                                <label asp-for="status" class = "control-label col-md-3"></label>
                                <div class="col-md-9"> 
                                    @Html.DropDownListFor(model => model.status, new SelectList(Model.statusList,"ValueText", "DispalyText"), "--Select Status--")                                   
                                <span asp-validation-for="status" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="Update" class="btn btn-primary" />
                                    @Html.ActionLink("Back to List", "Index", null,null, new { @class = "btn btn-default" })
                                </div>
                            </div>
                        </div>
                    } 
                </div>
            </div>
        </div>
         
    </div> 
</div>
