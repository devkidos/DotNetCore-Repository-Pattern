@model WBPOS.ViewModel.VMUsers;
@{
	ViewData["Title"] = "Create";
}

<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">User - Edit</h1>
			</div>
		</div>
	</div>
</div>


<div class="card">
	<div class="card-body">
		<div class="box-body">
			<div class="form-group col-md-12">
				<div class="col-md-8">
					@using (Html.BeginForm())
					{
						@Html.AntiForgeryToken()
						@Html.HiddenFor(model => model.userId)
						@*@Html.HiddenFor(model => model.createdDate)
					@Html.HiddenFor(model => model.status)
					@Html.HiddenFor(model => model.createdBy)*@
						<div class="form-horizontal">
							@Html.ValidationMessage("Error", htmlAttributes: new { @class = "errorsummary", id = "errorsummary" })

							<div class="form-group">
								@Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.birthDate, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.EditorFor(model => model.birthDate, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.birthDate, "", new { @class = "text-danger" })
								</div>
							</div>


							<div class="form-group">
								@Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@*@Html.EditorFor(model => model.sex, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })*@
									@Html.RadioButtonFor(m => m.sex,"Male") Male
									@Html.RadioButtonFor(m => m.sex,"Female") Female
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.mobileNumber, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.EditorFor(model => model.mobileNumber, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.mobileNumber, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.emailId, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.EditorFor(model => model.emailId, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.emailId, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.myRefferalCode, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.EditorFor(model => model.myRefferalCode, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.myRefferalCode, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.profilePicture, htmlAttributes: new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@*@if (model.profilePicture != null)
									{
										<img src="@Model.profilePicture" alt="@Model.firstName" height="100" />
									}*@

									@*@Html.EditorFor(model => model.profilePicture, new { htmlAttributes = new { @class = "form-control" } })*@
									@Html.TextBoxFor(m => m.profilePicture, new { type = "file" })
									@Html.ValidationMessageFor(model => model.profilePicture, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								<label asp-for="status" class = "control-label col-md-3"></label>
								<div class="col-md-9"> 
									@Html.DropDownListFor(model => model.status, new SelectList(Model.statusList,"ValueText", "DispalyText"), "--Select Status--")                                   
								<span asp-validation-for="status" class="text-danger"></span>
								</div>
							</div>


							<div class="form-group">
								<div class="col-md-offset-3 col-md-9">
									<input type="submit" value="Update" class="btn btn-primary" />
									@Html.ActionLink("Back to List", "Index", null,null, new { @class = "btn btn-default" })
								</div>
							</div>
						</div>
					}
				</div>
			</div>
		</div>

	</div>
</div>
