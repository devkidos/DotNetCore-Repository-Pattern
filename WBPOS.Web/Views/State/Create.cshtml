@model WBPOS.ViewModel.VMState
@{
    ViewData["Title"] = "Create";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">State - Create</h1>
            </div>
        </div>
    </div>
</div>


<div class="card"> 
    <div class="card-body"> 
         <div class="box-body">
            <div class="form-group col-md-12">
                <div class="col-md-8">
                    @using (Html.BeginForm())
                    { 
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationMessage("Error", htmlAttributes: new { @class = "errorsummary", id = "errorsummary" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.countryId, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.countryId, new SelectList(Model.countryList,"ValueText", "DispalyText"), "--Select Country--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.countryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.stateName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.stateName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.stateName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.stateCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.stateCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.stateCode, "", new { @class = "text-danger" })
                                </div>
                            </div> 
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                    @Html.ActionLink("Back to List", "Index", null,null, new { @class = "btn btn-default" })
                                </div>
                            </div>
                        </div>
                    } 
                </div>
            </div>
        </div>
         
    </div> 
</div>
